# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.17.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
  end

  desc "Runs swift lint"
  lane :lint do
    swiftlint(
      mode: :lint, # SwiftLint mode: :lint (default) or :autocorrect
      output_file: "swiftlint.json",
      ignore_exit_status: true # Allow fastlane to continue even if SwiftLint returns a non-zero exit status
    )
  end

  desc "Runs all the tests"
  lane :test do
    scan({
      scheme: "Feedback",
      device: "iPhone 6s"
    })
   
    coverage()
  end

  desc "Runs coverage"
  lane :coverage do
    xcov(
      workspace: "Feedback.xcworkspace",
      scheme: "Feedback",
      output_directory: "xcov_output",
      minimum_coverage_percentage: 40.0
    )  
  end

  desc "Runs ui tests"
  lane :uiTest do
    sh "cd ..;./server.sh stop;cd -;"
    sh "cd ..;./server.sh start;cd -;"
    scan({
      scheme: "FeedbackUITests",
      device: "iPhone 6s"
    })
    sh "cd ..;./server.sh stop;cd -"
  end

  desc "Runs monkey tests"
  lane :monkeyTest do
    scan({
      scheme: "FeedbackMonkeyTest",
      device: "iPhone 6s"
    })
  end

  desc "Setup"
  lane :setup do
    # No specific command
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
